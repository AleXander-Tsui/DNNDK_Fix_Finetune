# Visual odometry net

# ----------------------------------------------------------------------
# Data input
# ----------------------------------------------------------------------
input: "data"
input_dim: 1
input_dim: 256 #first 3-channel: I2; last 3-channel: I1
input_dim: 3
input_dim: 10

layer {
  name: "fc_0_pose"
  type: "InnerProduct"
  bottom: "data"
  top: "fc_0_pose"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu_fc_0_pose"
  type: "ReLU"
  bottom: "fc_0_pose"
  top: "fc_0_pose"
}

layer {
  name: "fc_1_pose"
  type: "InnerProduct"
  bottom: "fc_0_pose"
  top: "fc_1_pose"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu_fc_1_pose"
  type: "ReLU"
  bottom: "fc_1_pose"
  top: "fc_1_pose"
}


layer {
  name: "temporal_pose_0"
  type: "InnerProduct"
  bottom: "fc_1_pose"
  top: "temporal_pose_0"
  param { lr_mult: 0.1 decay_mult: 1 }
  param { lr_mult: 0.2 decay_mult: 0 }
  inner_product_param {
    num_output: 6
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "temporal_pose"
  type: "Reshape"
  bottom: "temporal_pose_0"
  top: "T_2to1" # transformation from t2 to t1 
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1 # infer it from the other dimensions
    }
  }
}

# ----------------------------------------------------------------------
# Geometry
# ----------------------------------------------------------------------

layer {
  name: "SE3"
  type: "Python"
  bottom: "T_2to1" 
  top: "SE3"
  python_param { 
    module: "pygeometry"
    layer: "SE3_Generator_KITTI"
  }
}